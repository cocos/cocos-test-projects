CCEffect %{
  techniques:
  - passes:
    - vert: complex-vs:vert
      frag: complex-fs:frag
      properties: &props
        mainTexture: { target: cubeMap, editor: { displayName: cubeMap } }
      rasterizerState:
        cullMode: back
      depthStencilState:
        depthTest: true
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
}%

CCProgram complex-vs %{
  precision highp float;
  #include <builtin/uniforms/cc-global>
  #include <legacy/decode>

  out mediump vec4 viewDir;

  vec4 vert () {
    CCDecode(viewDir);
    return cc_matViewProj * viewDir;
  }
}%

CCProgram complex-fs %{
  precision mediump float;
  #include <builtin/uniforms/cc-global>
  #include <builtin/uniforms/cc-environment>
  #include <common/data/unpack>
  #include <common/color/gamma>
  #include <legacy/output-standard>

  in mediump vec4 viewDir;

  uniform samplerCube cubeMap;

  vec4 frag () {
    vec4 color = texture(cubeMap, viewDir.xyz);
    if(color.a < 1.0)
      color = vec4(mix(vec3(0.0), color.rgb, color.a), 1.0);
    return color;
  }
}%
