"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs-extra");function t(e){let t=!0,s=0;const o=["--project","--testConfig","--platformIndex","--build","configPath"];if(e.argv.length>=9){for(const t of o)for(const o of e.argv)o.includes(t)&&(s+=1);t=s===o.length}else t=!1;return t}function s(e){let t="";const s=process.argv.indexOf(e);return-1!==s&&(t=process.argv[s+1]),t}function o(e,t,s){const o=Object.keys(s)[0];return e.hasOwnProperty(t)?JSON.stringify(e[t][o])!=JSON.stringify(s[o])?e[t]=Object.assign(e[t],s):console.log("无需修改"):console.log(`字段${t}不存在`),e}exports.getArgv=s,exports.processJudge=t,exports.startTest=async function(n,r){const a={"automation-framework":{AutoTest:"",__version__:"1.0.0"}};if(t(n)){s("--testConfig"),Number(s("--platformIndex"));const t=n.argv.length;if(n.argv[t-1].includes("configPath")){const s=n.argv[t-1].split("=")[1],c=JSON.parse(e.readFileSync(s,"utf-8"));o(c,"packages",a),c.packages[r].AutoTest=!0,e.writeJsonSync(s,c)}}else{await Editor.Panel.has(r)||console.log("developer open panel");const t=n.argv.length;if(n.argv[t-1].includes("configPath")){const s=n.argv[t-1].split("=")[1],c=JSON.parse(e.readFileSync(s,"utf-8"));o(c,"packages",a),c.packages[r].AutoTest=!1,e.writeJsonSync(s,c)}}},exports.updataJsonObject=o;
